// <auto-generated />
using System;
using BitLottery.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BitLottery.Database.Migrations
{
    [DbContext(typeof(BitLotteryContext))]
    partial class BitLotteryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:shared.CustomerNumbers", "'CustomerNumbers', 'shared', '1000', '2', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:shared.DrawNumbers", "'DrawNumbers', 'shared', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BitLottery.Entities.Models.Ballot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId");

                    b.Property<int?>("DrawId");

                    b.Property<int>("Number");

                    b.Property<DateTime?>("SellDate");

                    b.Property<int?>("WonPriceId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DrawId");

                    b.HasIndex("WonPriceId");

                    b.ToTable("Ballots");
                });

            modelBuilder.Entity("BitLottery.Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR shared.CustomerNumbers");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BitLottery.Entities.Models.Draw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DrawDate");

                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR shared.DrawNumbers");

                    b.Property<DateTime>("SellUntilDate");

                    b.HasKey("Id");

                    b.ToTable("Draws");
                });

            modelBuilder.Entity("BitLottery.Entities.Models.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int?>("DrawId");

                    b.Property<int>("PriceType");

                    b.HasKey("Id");

                    b.HasIndex("DrawId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("BitLottery.Entities.Models.Ballot", b =>
                {
                    b.HasOne("BitLottery.Entities.Models.Customer")
                        .WithMany("Ballots")
                        .HasForeignKey("CustomerId");

                    b.HasOne("BitLottery.Entities.Models.Draw")
                        .WithMany("Ballots")
                        .HasForeignKey("DrawId");

                    b.HasOne("BitLottery.Entities.Models.Price", "WonPrice")
                        .WithMany()
                        .HasForeignKey("WonPriceId");
                });

            modelBuilder.Entity("BitLottery.Entities.Models.Price", b =>
                {
                    b.HasOne("BitLottery.Entities.Models.Draw")
                        .WithMany("Prices")
                        .HasForeignKey("DrawId");
                });
#pragma warning restore 612, 618
        }
    }
}
